#!/bin/bash
#UFUNCTION=iverilog个人仿真脚本
#by yunahp 2020/6/4
#######################   iverilog仿真脚本   #######################
dir=$(pwd)
if [ "$1" = "-help" ] || [ "$1" = "-h" ];then #帮助
    echo "Usage : mvsim [option]"
    echo "  mvsim           	仿真波形显示一条龙服务"
    echo "  mvsim -init     	生成iverilog testbech模板"
    echo "  mvsim -help     	帮助"
    echo "  mvsim -r        	刷新仿真波形文件"
	echo "  mvsim -m module 	创建module.v文件"
	echo "  mvsim -sm module	创建module.sv文件"
    echo
    exit 0
fi
if [ "$1" = "-init" ] || [ "$1" = "-i" ];then #生成iverilog testbech模板
	if [ ! -f run ];then
		echo "#!/bin/bash" > run
		echo "mvsim \$*" >> run
		chmod +x run
		echo "info:已生成run脚本"
	fi
    if [ -f tb.v ];then
        echo "fail:初始化失败，已存在tb.v文件！"
        exit 0
    fi
cat <<EOF >tb.v
\`timescale 1ns / 1ps
module tb ;
reg clk,rst;

//生成始时钟
parameter NCLK = 4;
initial begin
	clk=0;
	forever clk=#(NCLK/2) ~clk;
end

/****************** BEGIN ADD module inst ******************/
//Modulenamme top (rst,clk);
/****************** BEGIN END module inst ******************/

initial begin
    \$dumpfile("wave.lxt2");
    \$dumpvars(0, tb);   //dumpvars(深度, 实例化模块1，实例化模块2，.....)
end

initial begin
   	rst = 1;
    	#(NCLK) rst=0;
    	#(NCLK) rst=1; //复位信号

	repeat(100) @(posedge clk)begin

	end
	\$display("运行结束！");
	\$dumpflush;
	\$finish;
	\$stop;
end
endmodule
EOF
    echo "info:已生成tb.v文件！"
    exit 0
fi
# verilog模板
if [ "$1" = "-m" ];then #添加module
	if [ "x$2" = "x" ];then
		echo "error:输入的命令有误，请查看帮助！"
	else
		file="$2.v"
		if [ -f $file ];then
			echo "error:$file已存在！"
			exit 1
		fi
		dat=$(date +%Y/%m/%d)
		echo "// ********************************************************************">$file
		echo "// File name    : $file">>$file
		echo "// Module name  : $2">>$file
		echo "// Author       : hpy">>$file
		echo "// Description  : ">>$file
		echo "// Date         : $dat">>$file
		echo "// --------------------------------------------------------------------">>$file

		echo "module $2(" >> $file
		echo "	input clk,">>$file
		echo "	input rst_n">>$file
		echo ");">>$file
		echo  "">>$file
		echo "always@(posedge clk or negedge rst_n)">>$file
		echo "begin">>$file
		echo "	if(!rst_n)begin">>$file
		echo "">>$file
		echo "	end">>$file
		echo "	else begin">>$file
		echo "">>$file
		echo "	end">>$file
		echo "end">>$file
		echo -e "\nendmodule\n">>$file
		echo "info:$file生成成功！"
	fi

	exit 0
fi
# system verilog模板
if [ "$1" = "-sm" ];then #添加module
	if [ "x$2" = "x" ];then
		echo "error:输入的命令有误，请查看帮助！"
	else
		file="$2.sv"
		if [ -f $file ];then
			echo "error:$file已存在！"
			exit 1
		fi
		dat=$(date +%Y/%m/%d)
		echo "// ********************************************************************">$file
		echo "// File name    : $file">>$file
		echo "// Module name  : $2">>$file
		echo "// Author       : hpy">>$file
		echo "// Description  : ">>$file
		echo "// Date         : $dat">>$file
		echo "// --------------------------------------------------------------------">>$file
		echo "//type=sv" >> $file
		echo "//title=demo" >> $file

		echo "module $2(" >> $file
		echo ");">>$file
		echo  "">>$file
		echo "initial begin" >> $file
		echo "" >> $file
		echo "end" >> $file
		echo "" >> $file
		echo "endmodule" >> $file
		echo "info:$file生成成功！"
	fi

	exit 0
fi
if [ $# -gt 0 ];then
	if [ "$1" = "-r" ];then
		echo "开始仿真！"
	else
		echo "命令有误，输入mvsim -help 显示帮助！"
		exit 1
	fi
fi

if [ ! -d sim ];then
    mkdir sim
fi
echo "MVSIM info:当前仿真的工程路径为$dir"
rm -rf ./sim/*  #清空sim文件夹下的内容
ctags -R
src=$(find -name "*.v")
iverilog  -o sim/wave $src #综合verilog代码
cd sim
echo
echo "<<<<<<<<<< S I M  R E P O R T >>>>>>>>>>"
vvp -n wave -lxt2  #仿真
echo "<<<<<<<<<<<<<<<<< E N D >>>>>>>>>>>>>>>>"
cd ..

if [ "$1" = "-r" ];then #刷新仿真数据
	echo "info:刷新仿真数据，如若刷新成功请自行打开gtkwave查看波形或者刷新已经打开的本工程gtkwave！"
	exit 0
fi

gtkwave sim/wave.lxt2 &> /dev/null & #显示波形
exit 0


